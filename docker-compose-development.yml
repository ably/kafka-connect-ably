version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.10-1-ubi8
    container_name: zookeper
    networks:
      kafka_network:
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      zk_id: '1'
    # ports:
    #  - '2181:2181'

  kafka:
#    image: confluentinc/cp-server:5.4.10-1-ubi8
    image: confluentinc/cp-enterprise-kafka:5.4.0
    hostname: kafka
    container_name: kafka
    networks:
      kafka_network:
        aliases:
          - kafka
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    volumes:
      - ./scripts/security/keypair:/tmp/conf
      - ./scripts/helper:/tmp/helper
      - ./scripts/security:/etc/kafka/secrets
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092, EXTERNAL_LISTENER://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, EXTERNAL_LISTENER://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, EXTERNAL_LISTENER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.10-1-ubi8
    container_name: schema-registry
    networks:
      kafka_network:
        aliases:
          - schema-registry
    ports:
       - '8081:8081'
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.10-1-ubi8
    container_name: control-center
    networks:
      kafka_network:
        aliases:
          - control-center
    ports:
      - '19021:9021'
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONFLUENT_CONTROLCENTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

  connector:
    container_name: connector
    build:
      context: .
      dockerfile: Dockerfile_development
    command:
      - /bin/connect-standalone
      - /config/docker-compose-worker.properties
      - /config/docker-compose-connector.properties
    volumes:
      - ./config:/config
    ports:
      - 5005:5005
    environment:
      PORT: 5005
      SUSPEND: ${SUSPEND:-n}
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connector
    networks:
      kafka_network:
        aliases:
          - connector
    depends_on:
      - zookeeper
      - kafka
      - schema-registry

  mysql-master:
    container_name: mysql-master
    image: docker.io/bitnami/mysql:latest
    restart: "no"
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=test
      - MYSQL_REPLICATION_MODE=master
      - MYSQL_REPLICATION_USER=repl_user
      - ALLOW_EMPTY_PASSWORD=yes
    #volumes:
     # - ./mysqld.cnf:/opt/bitnami/mysql/conf/my_custom.cnf
    # - ../sql/init_mysql.sql:/docker-entrypoint-initdb.d/init_mysql.sql
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/mysql/healthcheck.sh' ]
      interval: 15s
      timeout: 5s
      retries: 6


  debezium:
    container_name: debezium
    image: debezium/connect:1.9.5.Final
#    build:
#      context: ../../docker/debezium_jmx
#      args:
#        DEBEZIUM_VERSION: 2.1.0.Alpha1
#        JMX_AGENT_VERSION: 0.15.0
    restart: "no"
    ports:
      - "8083:8083"
      - "1976:1976"
    networks:
      kafka_network:
        aliases:
          - debezium
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      # Where to find Kafka broker
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=config-storage-topic-debezium
      - OFFSET_STORAGE_TOPIC=offset-storage-topic-debezium
      - STATUS_STORAGE_TOPIC=status-storage-topic-debezium
      - LOG_LEVEL=INFO
      - KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      - VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      #- KAFKA_OPTS=-javaagent:/kafka/etc/jmx_prometheus_javaagent.jar=8080:/kafka/etc/config.yml
      - JMXHOST=localhost
      - JMXPORT=1976
      - KAFKA_HEAP_OPTS=-Xms1G -Xmx5G
      #- LOG_LEVEL=DEBUG
    depends_on:
      - kafka

networks:
  kafka_network:
